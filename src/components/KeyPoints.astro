---
interface KeyPoint {
  title: string;
  description: string;
}

const { keyPoints = [] } = Astro.props;
---

<div class="key-points-container">
  {
    keyPoints.map((keyPoint: KeyPoint) => (
      <div class="key-point">
        <h4>{keyPoint.title}</h4>
        <p>{keyPoint.description}</p>
      </div>
    ))
  }
</div>

<style>
  .key-points-container {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    background-color: var(--ternary-color);
    border-radius: 2rem;
  }

  :global(.dark) .key-points-container {
    background-color: var(--dark-quaternary-color);
  }

  .key-point {
    display: flex;
    flex-direction: column;
    padding: 1.5rem 1.5rem 0 1.5rem;
  }

  .key-point h4 {
    color: var(--body-primary-color);
    letter-spacing: 0.7px;
    margin: 0;
    font-size: 1.2rem;
  }

  :global(.dark) .key-point h4 {
    color: var(--dark-body-primary-color);
  }

  .key-point:last-child {
    margin-bottom: 1rem;
  }

  .key-point p {
    color: var(--body-secondary-color);
    font-size: var(--font-size-paragraph-body);
    line-height: 1.3rem;
    letter-spacing: 0.7px;
  }

  :global(.dark) .key-point p {
    color: var(--dark-body-secondary-color);
  }

  @media (min-width: 768px) {
    .key-points-container {
      margin-top: 5rem;
      grid-template-columns: repeat(2, 1fr);
    }

    .key-point {
      padding: 2.5rem 2.5rem 0 2.5rem;
    }

    .key-point h4 {
      margin: 0;
    }

    .key-point:last-child {
      margin-bottom: 1rem;
    }

    .key-point p {
      font-size: var(--font-size-paragraph-body-tablet);
      line-height: 30px;
      font-weight: 400;
    }
  }
</style>
