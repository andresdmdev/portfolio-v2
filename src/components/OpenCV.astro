---
interface Props {
    text: string
}

const { text } = Astro.props;
---

<div class="profile-cv">
    <span class="cv-text">{text}</span>
    <box-icon class="link" name='link-external' animation='tada-hover'></box-icon>
</div>

<style>
    .profile-cv {
        border-radius: 12px;
        border-color: var(--secondary-color);
        background-color: transparent;
        border-style: solid;
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        align-items: center;
        cursor: pointer;
        overflow: hidden;
        padding: 0 8px;
        gap: 5px;
        transition: all 300ms ease-in-out;
    }
    .profile-cv:hover {
        background-color: var(--secondary-color);
    }
    .profile-cv:hover .cv-text {
        color: var(--primary-color);
    }
    .profile-cv:hover .link {
        fill: var(--primary-color);
    }
    :global(.dark) .profile-cv {
        border-color: var(--dark-secondary-color);
    }
    :global(.dark) .profile-cv:hover {
        background-color: var(--dark-secondary-color);
    }
    .cv-text {
        line-height: 32px;
        color: var(--secondary-color);
        font-size: 13px;
        font-weight: bolder;
    }
    :global(.dark) .profile-cv:hover .cv-text {
        color: var(--dark-primary-color);
    }
    :global(.dark) .profile-cv:hover .link {
        fill: var(--dark-primary-color);
    }
    .link {
        fill: var(--secondary-color);
        width: 24px;
        height: 24px;
        margin-left: 2px;
    }
    :global(.dark) .cv-text {
        color: var(--dark-secondary-color);
    }
    :global(.dark) .link {
        fill: var(--dark-secondary-color);
    } 
</style>

